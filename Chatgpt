import os
import csv
from statistics import variance


def find_best_average(values):
    while len(values) > 1:
        avg = sum(values) / len(values)
        var = variance(values)
        if var < 0.05:
            return avg
        else:
            values = values[1:]
    return values[0]


def process_files(hs_file_directory, output_file_path):
    fieldnames = ['CS_File', 'eventId', 'EventName', 'SelectionId', 'Back_P0_Average', 'Lay_P0_Average']

    # Create the output file directory if it does not exist
    output_directory = os.path.dirname(output_file_path)
    if not os.path.exists(output_directory):
        os.makedirs(output_directory)

    # Open the output file in 'write' mode
    with open(output_file_path, 'w', newline='') as outfile:
        csv_writer = csv.writer(outfile)
        csv_writer.writerow(fieldnames)

        for filename in os.listdir(hs_file_directory):
            cs_file_path = os.path.join(hs_file_directory, filename)
            events = []

            with open(cs_file_path, newline='') as cs_file:
                reader = csv.DictReader(cs_file)
                events = list(reader)

                inplay_events = []
                odds_found = 0

                for event in events:
                    if event.get('Inplay') == 'True' and event.get('SelectionId') == '1096':
                        back_P0 = event.get('back_P0')
                        lay_P0 = event.get('lay_P0')

                        if back_P0 and lay_P0:
                            odds_found += 1
                            inplay_events.append({'back_P0': float(back_P0), 'lay_P0': float(lay_P0)})

                        if odds_found == 10:
                            break

                if odds_found == 10:
                    # Calculate the average for back_P0 and lay_P0
                    back_P0_values = [event['back_P0'] for event in inplay_events]
                    lay_P0_values = [event['lay_P0'] for event in inplay_events]
                    back_P0_average = round(find_best_average(back_P0_values), 2)
                    lay_P0_average = round(find_best_average(lay_P0_values), 2)

                    # Write the row to the output file and flush the buffer
                    row_data = [row['CS_File'], row['eventId'], row['EventName']]
                    for i in range(10):
                        if i < len(back_P0_values):
                            row_data.append(back_P0_values[i])
                            row_data.append(lay_P0_values[i])
                        else:
                            row_data.append('')
                            row_data.append('')
                    row_data.extend([back_P0_average, lay_P0_average])
                    csv_writer.writerow(row_data)
                    outfile.flush()

                print(f"Processed event: {row['EventName']}")

        print("All events have been processed and saved to the CSV file.")


def main():
    hs_file_directory = '//NASWDC/Data/Betfair/Soccer/Test'
    output_file_path = os.path.join(hs_file_directory, 'Odds_HS_output_filtered.csv')

    process_files(hs_file_directory, output_file_path)


if __name__ == "__main__":
    main()
