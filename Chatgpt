import os
import csv
from statistics import variance


def find_best_average(values):
    while len(values) > 1:
        avg = sum(values) / len(values)
        var = variance(values)
        if var < 0.05:
            return avg
        else:
            values = values[1:]
    return values[0]


def process_csv_file(csv_file_directory, hs_file_directory, output_file_path):
    fieldnames = ['CS_File', 'eventId', 'EventName']
    for i in range(1, 11):
        fieldnames.extend([f'back_P0_{i}', f'lay_P0_{i}'])

    # Open the output file in 'write' mode
    with open(output_file_path, 'w', newline='') as outfile:
        csv_writer = csv.writer(outfile)
        csv_writer.writerow(fieldnames)

        with open(csv_file_directory, newline='') as csvfile:
            csv_reader = csv.DictReader(csvfile)

            for row in csv_reader:
                cs_file_path = os.path.join(hs_file_directory, row['HS_File'])
                events = []

                with open(cs_file_path, newline='') as cs_file:
                    reader = csv.DictReader(cs_file)
                    events = list(reader)

                inplay_events = []
                odds_found = 0

                for event in events:
                    if event.get('Inplay') == 'True' and event.get('SelectionId') == '1096':
                        back_P0 = event.get('back_P0')
                        lay_P0 = event.get('lay_P0')

                        if back_P0 and lay_P0:
                            odds_found += 1
                            inplay_events.append({'back_P0': float(back_P0), 'lay_P0': float(lay_P0)})

                        if odds_found == 10:
                            break

                if odds_found == 10:
                    # Calculate the average for back_P0 and lay_P0
                    back_P0_values = [event['back_P0'] for event in inplay_events]
                    lay_P0_values = [event['lay_P0'] for event in inplay_events]
                    back_P0_average = round(find_best_average(back_P0_values), 2)
                    lay_P0_average = round(find_best_average(lay_P0_values), 2)

                    # Write the row to the output file and flush the buffer
                    row_data = [row['CS_File'], row['eventId'], row['EventName']]
                    for i in range(10):
                        if i < len(back_P0_values):
                            row_data.append(back_P0_values[i])
                            row_data.append(lay_P0_values[i])
                        else:
                            row_data.append('')
                            row_data.append('')
                    row_data.extend([back_P0_average, lay_P0_average])
                    csv_writer.writerow(row_data)
                    outfile.flush()

                print(f"Processed event: {row['EventName']}")

        print("All events have been processed and saved to the CSV file.")


def main():
    csv_file_directory = 'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Data/New_test/2H_timestamps.csv'
    output_file_path = 'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Data/New_test/outputHS_4506345_filtered.csv'
    hs_file_directory = 'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Data/New_test/HS'

    process_csv_file(csv_file_directory, hs_file_directory, output_file_path)


if __name__ == "__main__":
    main()
