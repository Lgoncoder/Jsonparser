import os
import logging
import logging
import pandas as pd
from pathlib import Path
import betfairlightweight
from betfairlightweight import StreamListener
from betfairlightweight.streaming.stream import MarketStream
from glob import glob
import os
import json
import betfairlightweight
from betfairlightweight import StreamListener

# setup logging
logging.basicConfig(level=logging.INFO)

# create trading instance (don't need username/password)
trading = betfairlightweight.APIClient("username", "password")

# create listener
listener = StreamListener(max_latency=None)

# specify the directory where your json files are located
directory_path = r"C:\Users\luisg\PycharmProjects\BetfairHistoricalDataStreaming\Betfair_data\TestCS"

# get a list of all the files in the directory
all_files = os.listdir(directory_path)

# filter the list for only .json files
json_files = [file for file in all_files if file.endswith('.json')]

# loop through each file in the directory
for file_name in json_files:

    # create a full file path by joining the directory path and file name
    full_file_path = os.path.join(directory_path, file_name)

    # create historical stream (update file_path to your file location)
    stream = trading.streaming.create_historical_generator_stream(
        file_path=full_file_path,
        listener=listener,
    )

    # create generator
    gen = stream.get_generator()

    # print marketBooks
    for market_books in gen():
        for market_book in market_books:
            print(market_book)

    with open(file_name, 'r') as file:
        first_line = file.readline()
        for last_line in file:
            pass

    # print(first_line)

    data = json.loads(first_line)

    if data['mc'][0]['marketDefinition']['marketType'] == 'MATCH_ODDS':
        home = data['mc'][0]['marketDefinition']['runners'][0]['id']
        away = data['mc'][0]['marketDefinition']['runners'][1]['id']
        eventId = data['mc'][0]['marketDefinition']['eventId']
        marketId = data['mc'][0]['id']
        marketName = data['mc'][0]['marketDefinition']['name']
        openDate = data['mc'][0]['marketDefinition']['openDate']
        eventName = data['mc'][0]['marketDefinition']['eventName']
        timezone = data['mc'][0]['marketDefinition']['timezone']
        # country = data['mc'][0]['marketDefinition']['countryCode']
        try:
            country = data['mc'][0]['marketDefinition']['countryCode']
        except:
            country = 'NA'
        df = pd.read_csv(
            'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt')
        df.SelectionId.replace(home, '1096', inplace=True)
        df.SelectionId.replace(away, 48351, inplace=True)
        df['eventId'] = eventId
        df['eventName'] = eventName
        df['marketId'] = marketId
        df['marketName'] = marketName
        df['openDate'] = openDate
        df['country'] = country
        df['timezone'] = timezone

        # if df.marketName[1] == 'Match Odds':
        term = "MO"

        df.to_csv('C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt',
                  index=False)

        # Saves file with the same original name
        s_temp = os.path.splitext(f)[1]
        saux = s_temp[1:]
        s = term + saux
        os.rename(r'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt',
                  r'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/%s.txt' % s)

    elif data['mc'][0]['marketDefinition']['marketType'] == 'CORRECT_SCORE':
        home = data['mc'][0]['marketDefinition']['runners'][0]['id']
        away = data['mc'][0]['marketDefinition']['runners'][1]['id']
        eventId = data['mc'][0]['marketDefinition']['eventId']
        marketId = data['mc'][0]['id']
        marketName = data['mc'][0]['marketDefinition']['name']
        openDate = data['mc'][0]['marketDefinition']['openDate']
        eventName = data['mc'][0]['marketDefinition']['eventName']
        try:
            country = data['mc'][0]['marketDefinition']['countryCode']
        except:
            country = 'NA'
        timezone = data['mc'][0]['marketDefinition']['timezone']

        df = pd.read_csv(
            'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Data/allfiles/allevents/output.txt')
        df.SelectionId.replace(home, '1096', inplace=True)
        df.SelectionId.replace(away, 48351, inplace=True)
        df['eventId'] = eventId
        df['eventName'] = eventName
        df['marketId'] = marketId
        df['marketName'] = marketName
        df['openDate'] = openDate
        df['country'] = country
        df['timezone'] = timezone

        term = "CS"

        df.to_csv('C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt',
                  index=False)

        # Saves file with the same original name
        s_temp = os.path.splitext(f)[1]
        saux = s_temp[1:]
        s = term + saux
        os.rename(r'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt',
                  r'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/%s.txt' % s)

    elif data['mc'][0]['marketDefinition']['marketType'] == 'HALF_TIME_SCORE':
        home = data['mc'][0]['marketDefinition']['runners'][0]['id']
        away = data['mc'][0]['marketDefinition']['runners'][1]['id']
        eventId = data['mc'][0]['marketDefinition']['eventId']
        marketId = data['mc'][0]['id']
        marketName = data['mc'][0]['marketDefinition']['name']
        openDate = data['mc'][0]['marketDefinition']['openDate']
        eventName = data['mc'][0]['marketDefinition']['eventName']
        try:
            country = data['mc'][0]['marketDefinition']['countryCode']
        except:
            country = 'NA'
        timezone = data['mc'][0]['marketDefinition']['timezone']

        df = pd.read_csv(
            'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt')
        df.SelectionId.replace(home, '1096', inplace=True)
        df.SelectionId.replace(away, 48351, inplace=True)
        df['eventId'] = eventId
        df['eventName'] = eventName
        df['marketId'] = marketId
        df['marketName'] = marketName
        df['openDate'] = openDate
        df['country'] = country
        df['timezone'] = timezone

        term = "HS"

        df.to_csv('C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt',
                  index=False)

        # Saves file with the same original name
        s_temp = os.path.splitext(f)[1]
        saux = s_temp[1:]
        s = term + saux
        os.rename(r'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt',
                  r'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/%s.txt' % s)

    elif data['mc'][0]['marketDefinition']['marketType'] == 'HALF_TIME':
        home = data['mc'][0]['marketDefinition']['runners'][0]['id']
        away = data['mc'][0]['marketDefinition']['runners'][1]['id']
        eventId = data['mc'][0]['marketDefinition']['eventId']
        marketId = data['mc'][0]['id']
        marketName = data['mc'][0]['marketDefinition']['name']
        openDate = data['mc'][0]['marketDefinition']['openDate']
        eventName = data['mc'][0]['marketDefinition']['eventName']
        try:
            country = data['mc'][0]['marketDefinition']['countryCode']
        except:
            country = 'NA'
        timezone = data['mc'][0]['marketDefinition']['timezone']

        df = pd.read_csv(
            'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt')
        df.SelectionId.replace(home, '1096', inplace=True)
        df.SelectionId.replace(away, 48351, inplace=True)
        df['eventId'] = eventId
        df['eventName'] = eventName
        df['marketId'] = marketId
        df['marketName'] = marketName
        df['openDate'] = openDate
        df['country'] = country
        df['timezone'] = timezone

        term = "HT"

        df.to_csv('C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt',
                  index=False)

        # Saves file with the same original name
        s_temp = os.path.splitext(f)[1]
        saux = s_temp[1:]
        s = term + saux
        os.rename(r'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/output.txt',
                  r'C:/Users/luisg/PycharmProjects/BetfairHistoricalDataStreaming/Betfair_data/TestCS/%s.txt' % s)

