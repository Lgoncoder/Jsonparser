import os
import csv
import statistics

network_location = '//NASWDC/Data/Betfair/Soccer/Test'
output_file = '//NASWDC/Data/Betfair/Soccer/Test/output.csv'

def process_file(file_path):
    with open(file_path, 'r') as file:
        reader = csv.DictReader(file)
        event_data = {
            'CS_File': os.path.basename(file_path),
            'eventId': None,
            'EventName': None,
            'SelectionId': None,
            'Back_P0': [],
            'Lay_P0': []
        }

        for line in reader:
            if line['SelectionId'] == '1096' and line['Inplay'] == 'True':
                event_data['eventId'] = line['eventId']
                event_data['EventName'] = line['eventName']
                event_data['SelectionId'] = line['SelectionId']
                back_p0 = float(line['back_P0'])
                lay_p0 = float(line['lay_P0'])
                event_data['Back_P0'].append(back_p0)
                event_data['Lay_P0'].append(lay_p0)

                if len(event_data['Back_P0']) == 10:
                    variance_back_p0 = statistics.variance(event_data['Back_P0'])
                    variance_lay_p0 = statistics.variance(event_data['Lay_P0'])

                    if variance_back_p0 < 0.05 and variance_lay_p0 < 0.05:
                        return {
                            'CS_File': event_data['CS_File'],
                            'eventId': event_data['eventId'],
                            'EventName': event_data['EventName'],
                            'SelectionId': event_data['SelectionId'],
                            'Back_P0_1': event_data['Back_P0'][0],
                            'Lay_P0_1': event_data['Lay_P0'][0],
                            'Back_P0_2': event_data['Back_P0'][1],
                            'Lay_P0_2': event_data['Lay_P0'][1],
                            'Back_P0_3': event_data['Back_P0'][2],
                            'Lay_P0_3': event_data['Lay_P0'][2],
                            'Back_P0_4': event_data['Back_P0'][3],
                            'Lay_P0_4': event_data['Lay_P0'][3],
                            'Back_P0_5': event_data['Back_P0'][4],
                            'Lay_P0_5': event_data['Lay_P0'][4],
                            'Back_P0_6': event_data['Back_P0'][5],
                            'Lay_P0_6': event_data['Lay_P0'][5],
                            'Back_P0_7': event_data['Back_P0'][6],
                            'Lay_P0_7': event_data['Lay_P0'][6],
                            'Back_P0_8': event_data['Back_P0'][7],
                            'Lay_P0_8': event_data['Lay_P0'][7],
                            'Back_P0_9': event_data['Back_P0'][8],
                            'Lay_P0_9': event_data['Lay_P0'][8],
                            'Back_P0_10': event_data['Back_P0'][9],
                            'Lay_P0_10': event_data['Lay_P0'][9]
                        }
                    else:
                        event_data['Back_P0'] = event_data['Back_P0'][1:]
                        event_data['Lay_P0'] = event_data['Lay_P0'][1:]

        return None

def write_output(output_data):
    with open(output_file, 'w', newline='') as csvfile:
        fieldnames = ['CS_File', 'eventId', 'EventName', 'SelectionId',
                      'Back_P0_1', 'Lay_P0_1', 'Back_P0_2', 'Lay_P0_2',
                      'Back_P0_3', 'Lay_P0_3', 'Back_P0_4', 'Lay_P0_4',
                      'Back_P0_5', 'Lay_P0_5', 'Back_P0_6', 'Lay_P0_6',
                      'Back_P0_7', 'Lay_P0_7', 'Back_P0_8', 'Lay_P0_8',
                      'Back_P0_9', 'Lay_P0_9', 'Back_P0_10', 'Lay_P0_10']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

        writer.writeheader()
        for data in output_data:
            writer.writerow(data)

def main():
    output_data = []

    for file_name in os.listdir(network_location):
        if file_name.startswith('CS') and file_name.endswith('.txt'):
            file_path = os.path.join(network_location, file_name)
            event_data = process_file(file_path)

            if event_data:
                output_data.append(event_data)

    write_output(output_data)

if __name__ == "__main__":
    main()
